/* By: Marcus Chan */
/* Std ID: A01403269*/

USE [SQLBook];
GO

/* Q1: Find the most popular products and their quantity sold during a national holiday */
WITH nationalHoliday([date], [holiday]) 
AS (
	SELECT
		c.[Date],
		IIF(c.HolidayType='national', c.HolidayType, 'other')
	FROM [SQLBook].[dbo].[Calendar] c
)
SELECT TOP 10 ol.ProductId, SUM(ol.NumUnits) [Products Sold]
FROM [SQLBook].[dbo].[Orders] o
INNER JOIN [SQLBook].[dbo].[Calendar] c
ON c.[Date]=o.OrderDate
INNER JOIN [SQLBook].[dbo].[OrderLines] ol
ON ol.OrderId=ol.OrderId
INNER JOIN nationalHoliday nh
ON nh.[date]=o.OrderDate
WHERE nh.holiday='national'
GROUP BY ol.ProductId, o.OrderDate
ORDER BY [Products Sold] DESC;


/* Q2: Use AdventureWorks 2022 find the number of employees in each department except those in HR */
WITH notHR (businessID, department) AS (
	SELECT edh.BusinessEntityID, d.[Name]
	FROM [AdventureWorks2022].HumanResources.EmployeeDepartmentHistory edh
	JOIN [AdventureWorks2022].HumanResources.Department d
	ON edh.DepartmentID=d.DepartmentID
	EXCEPT
	SELECT 
		IIF(d.[Name]='Human Resources', [BusinessEntityID], NULL) AS [BusinessEntityID],
		d.[Name]
	FROM [AdventureWorks2022].HumanResources.EmployeeDepartmentHistory edh
	JOIN [AdventureWorks2022].HumanResources.Department d
	ON edh.DepartmentID=d.DepartmentID
)
SELECT department, COUNT(businessID) [Employees]
FROM notHR
GROUP BY department


/* Q3: Contrast the order count different campaigns channels*/
SELECT [CampaignId], pvt.[AD], pvt.[EMAIL], pvt.[INSERT], pvt.[MAIL], pvt.[PARTNER] , pvt.[WEB]
FROM (
	SELECT o.OrderId, c.Channel, c.CampaignId
	FROM SQLBook.dbo.Orders o
	JOIN SQLBook.dbo.Campaigns c
	ON o.CampaignId=c.CampaignId
	JOIN SQLBook.dbo.OrderLines ol
	ON ol.OrderId=o.OrderId
) as g
PIVOT
(
	COUNT([OrderID])
	FOR Channel
	IN ([PARTNER], AD, WEB, [INSERT], EMAIL, MAIL)
) as pvt;


/* Q4: Determine the average percentage number of males and females in a household*/
WITH cte(genderM, genderF) AS (
	SELECT
		CASE WHEN [Gender]='F' THEN 100.0 ELSE 0.0 END AS [Female],
		CASE WHEN [Gender]='M' THEN 100.0 ELSE 0.0 END AS [Male]
	FROM SQLBook.dbo.Customers
)
SELECT AVG(genderM) [Household Male Percentage], AVG(genderF) [Household Female Percentage]
FROM cte;


/* Q5: Get the average of revenue for the top 10 campaign's first year from 2009 to 2013*/
WITH yearData(campaign, y2009, y2010, y2011, y2012, y2013) AS (
	SELECT
		o.CampaignId,
		AVG(IIF(YEAR(o.OrderDate)=2009, o.TotalPrice, NULL)),
		AVG(IIF(YEAR(o.OrderDate)=2010, o.TotalPrice, NULL)),
		AVG(IIF(YEAR(o.OrderDate)=2011, o.TotalPrice, NULL)),
		AVG(IIF(YEAR(o.OrderDate)=2012, o.TotalPrice, NULL)),
		AVG(IIF(YEAR(o.OrderDate)=2013, o.TotalPrice, NULL))
	FROM SQLBook.dbo.Orders o
	WHERE YEAR(o.OrderDate) > 2009 AND YEAR(o.OrderDate) < 2013
	GROUP BY o.CampaignId
)
SELECT campaign, ISNULL(COALESCE(y2009, y2010, y2011, y2012, y2013), 0) AS [Average Performance, First Year]
FROM yearData
ORDER BY [Average Performance, First Year] DESC;


/* Q6: what are the numbers order generated by campaigns with discounts and without holidays*/
	-- except the holidays 
WITH discountEffects([date]) AS (
	SELECT [date]
	FROM SQLBook.dbo.Calendar c
	WHERE c.HolidayType IS NULL
	INTERSECT
	SELECT o.OrderDate
	FROM SQLBook.dbo.Campaigns c
	JOIN SQLBook.dbo.Orders o
	ON c.CampaignId=o.CampaignId
	WHERE c.Discount > 0
)
SELECT YEAR(de.[date]) [Year], COUNT(o.OrderId) [Number of Orders]
FROM discountEffects de
INNER JOIN SQLBook.dbo.Orders o
ON o.OrderDate=de.[date]
GROUP BY YEAR(de.[date])
ORDER BY YEAR(de.[date]);


/* Q7: From AdventureWorks 2022 get a list of the type of products created and how many kinds of them*/
WITH ProductType(product) AS (
	SELECT LEFT(p.ProductNumber,2)
	FROM AdventureWorks2022.Production.Product p
)
SELECT product, COUNT(*) [Products Type Count]
FROM ProductType
GROUP BY ROLLUP(product);


/* Q8: find percentages of employees marrital status and their genders */
WITH marry(EmpID, pMaleMar, pFemaleMar, pMaleSing, pFemaleSing) AS (
	SELECT e.BusinessEntityID,
	IIF(e.Gender='M' AND e.MaritalStatus='M', 100, 0) AS malmar,
	IIF(e.Gender='F' AND e.MaritalStatus='M', 100, 0) AS femmar,
	IIF(e.Gender='M' AND e.MaritalStatus='S', 100, 0) AS malsin,
	IIF(e.Gender='F' AND e.MaritalStatus='S', 100, 0) AS femsin
	FROM [AdventureWorks2022].[HumanResources].Employee e
)
SELECT 
	AVG(pMaleMar) [Male Married],
	AVG(pFemaleMar) [Female Married],
	AVG(pMaleSing) [Male Single],
	AVG(pFemaleSing) [Female Single]
FROM marry


/* Q9: Compare orders on every day of the week*/
	-- pivot the days
SELECT
	pvt.Mon,
	pvt.Tue,
	pvt.Wed,
	pvt.Thu,
	pvt.Fri,
	pvt.Sat,
	pvt.Sun
FROM (SELECT c.DOW
	FROM SQLBook.dbo.Calendar c
	JOIN SQLBook.dbo.Orders o
	ON c.[Date]=o.OrderDate
) as g
PIVOT
(
	COUNT(DOW)
	FOR DOW
	IN ([Mon], [Tue], [Wed], [Thu], [Fri], [Sat], [Sun])
) AS pvt;


/* Q10: Find the percent of products in grouped that are stocked and not*/
WITH stocked([group], stock) AS (
	SELECT
		p.GroupName,
		CASE
			WHEN [IsInStock]='N' THEN 0.0
			WHEN [IsInStock]='Y' THEN 100.0
		ELSE 0.0
		END AS [Stocked Stake]
	FROM SQLBook.dbo.Products p
)
SELECT
	s.[group],
	FORMAT(AVG(stock), 'N2') [Percentage Stocked]
FROM stocked s
GROUP BY s.[group];
